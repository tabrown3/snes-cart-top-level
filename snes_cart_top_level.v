
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module snes_cart_top_level(

	//////////// CLOCK //////////
	CLOCK_50,

	//////////// LED //////////
	LED,

	//////////// KEY //////////
	KEY,

	//////////// SW //////////
	SW,

	//////////// SDRAM //////////
	DRAM_ADDR,
	DRAM_BA,
	DRAM_CAS_N,
	DRAM_CKE,
	DRAM_CLK,
	DRAM_CS_N,
	DRAM_DQ,
	DRAM_DQM,
	DRAM_RAS_N,
	DRAM_WE_N,

	//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
	top,
	top_IN,

	//////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
	bottom,
	bottom_IN 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;

//////////// LED //////////
output		     [7:0]		LED;

//////////// KEY //////////
input 		     [1:0]		KEY;

//////////// SW //////////
input 		     [3:0]		SW;

//////////// SDRAM //////////
output		    [12:0]		DRAM_ADDR;
output		     [1:0]		DRAM_BA;
output		          		DRAM_CAS_N;
output		          		DRAM_CKE;
output		          		DRAM_CLK;
output		          		DRAM_CS_N;
inout 		    [15:0]		DRAM_DQ;
output		     [1:0]		DRAM_DQM;
output		          		DRAM_RAS_N;
output		          		DRAM_WE_N;

//////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
inout 		    [33:0]		top;
input 		     [1:0]		top_IN;

//////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
inout 		    [33:0]		bottom;
input 		     [1:0]		bottom_IN;


//=======================================================
//  REG/WIRE declarations
//=======================================================

wire debug_clk;
wire clk;
wire cs;
wire spi_clk;
wire mosi;
wire miso;

//=======================================================
//  Structural coding
//=======================================================

assign cs = bottom[23];
assign spi_clk = bottom[17];
assign mosi = bottom[27];
assign bottom[33] = miso;

debug_pll DEBUG_PLL(
	.inclk0(CLOCK_50),
	.c0(debug_clk),
	.c1(clk)
);

snes_cart SNES_CART(
	.clk(clk),
	.cs(cs),
	.spi_clk(spi_clk),
	.mosi(mosi),
	.miso(miso)
);

endmodule
